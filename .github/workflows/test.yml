name: Test

on:
  workflow_call:

jobs:
  nix-build:
    name: Build with nix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get required nix channel
        id: channel
        shell: bash
        run: |
          CHANNEL="$(grep 'nixpkgs\.url' flake.nix | sed 's#.*github:NixOS/nixpkgs/\(nixos-[[:digit:]]\+\.[[:digit:]]\+\).*#\1#')"
          echo "name=$CHANNEL" >> "$GITHUB_OUTPUT"
      - name: Install nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:${{ steps.channel.outputs.name }}
      - name: Build
        run: nix build

  build:
    name: Build with cargo
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - toolchain: stable
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - toolchain: stable
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          # Windows
          - toolchain: stable
            os: windows-latest
            target: x86_64-pc-windows-msvc

          # MacOS
          - toolchain: stable
            os: macos-latest
            target: aarch64-apple-darwin

          # non-stable toolchains
          - toolchain: beta
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - toolchain: nightly
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update && sudo apt-get install -y musl-tools
      - run: |
          rustup target add ${{ matrix.target }}
          cargo build --target=${{ matrix.target }}

  build-success:
    name: Build success
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - run: 'true'

  cargo-fmt:
    name: Cargo format check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: rustup update "$TOOLCHAIN" && rustup default "$TOOLCHAIN"
        env:
          TOOLCHAIN: stable
      - run: cargo fmt --check
