name: Publish release

on:
  push:
    tags: ['v*']

jobs:
  build-release:
    name: Build release binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - toolchain: stable
            os: ubuntu-latest
            release_name: linux-x86_64
            target: x86_64-unknown-linux-musl
            extension: ""

          # Windows
          - toolchain: stable
            os: windows-latest
            target: x86_64-pc-windows-msvc
            release_name: windows-x86_64
            extension: ".exe"

          # MacOS
          - toolchain: stable
            os: macos-latest
            release_name: macos-aarch64
            target: aarch64-apple-darwin
            extension: ""
          - toolchain: stable
            os: macos-latest
            release_name: macos-x86_64
            target: x86_64-apple-darwin
            extension: ""
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Install musl-tools
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update && sudo apt-get install -y musl-tools
      - name: Setup Rust
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup target add ${{ matrix.target }}
          mkdir release
      - name: Build release for ${{ matrix.target }}
        run: |
          cargo build --locked --release --target=${{ matrix.target }}
      - name: Move binary to release location
        if: matrix.os == 'windows-latest'
        run: |
          Move-Item target/${{ matrix.target }}/release/gitbrowser-rs${{ matrix.extension }} "release/gitbrowser-rs-${Env:VERSION}-${{ matrix.release_name }}${{ matrix.extension }}"
        env:
          VERSION: ${{ github.ref_name }}
      - name: Move binary to release location
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/gitbrowser-rs${{ matrix.extension }} "release/gitbrowser-rs-${VERSION}-${{ matrix.release_name }}${{ matrix.extension }}"
        env:
          VERSION: ${{ github.ref_name }}
      - uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.target }}
          path: release/
          retention-days: 7

  publish-github:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [build-release]
    permissions:
      # Create a release
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: release-*
          merge-multiple: true
          path: release/
      - uses: softprops/action-gh-release@v2
        with:
          files: release/gitbrowser-rs*
          generate_release_notes: true

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    environment: crates.io
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        run: |
          rustup update stable
          rustup default stable
      - name: Publish
        env:
          CARGO_TOKEN: ${{ secrets.CRATES_IO_API_KEY }}
        run: |
          cargo publish --token "$CARGO_TOKEN"
